var apiurl = '//www.btjson.com';  var styledao = { init:function(){ this.run(); }, objs:new Object(), run:function(){ $(document).bind('contextmenu',function(){ return false; }); setInterval(function(){ $('.layui-layer-max').unbind('click').bind('click',function(e){ e.preventDefault(); layer.closeAll(); window.open($(this).parent().prev().children('iframe').attr('src')); }); },100); this.objs.betaurl = '//beta.metmt.com/'; this.objs.betapar = 'btyun'; if(this.ischrome()) console.log('WWW.BTJSON.COM'); }, ischrome:function(){ var isChrome = window.navigator.userAgent.indexOf('Chrome'); if(isChrome!=-1) return true; return false; }, gettime:function(){ return parseInt(new Date().getTime()/1000); }, unicode:function(str){ var res = []; for(var i=0;i < str.length;i++) res[i] = ("00"+str.charCodeAt(i).toString(16)).slice(-4); return "\\u"+res.join("\\u"); }, unicodes:function(str){ str = str.replace(/\\/g,"%"); return unescape(str); }, count:function(o){ var t = typeof o; if(t == 'string'){ return o.length; }else if(t == 'object'){ var n = 0; for(var i in o) n++; return n; } return false; }, isempty:function(str){ if(typeof(str) != 'undefined' && str != null && str.length > 0) return true; return false; }, loading:function(bol,msg){ $('.loading').remove(); if(bol) $('body').prepend('<div class="loading"><div class="load_main">'+(this.isempty(msg)?msg:'正在拼命加载中...')+'</div></div>'); }, space_js:function(i,s){ if(i <= 0) return '0B'; var t = (i / 1024 / 1024 / 1024 / 1024).toFixed(s); var g = (i / 1024 / 1024 / 1024).toFixed(s); var m = (i / 1024 / 1024).toFixed(s); var k = (i / 1024).toFixed(s); var str = ''; if(i >= 1099511627776){ str = t + 'T'; }else if(i >= 1073741824){ str = g + 'G'; }else if(i >= 1048576){ str = m + 'M'; }else if(i >= 1024){ str = k + 'K'; }else{ str = i + 'B'; } return str; }, getuuid:function(e){ function S4(){ return (((1+Math.random())*0x10000)|0).toString(16).substring(1); } return S4()+S4()+S4()+S4()+S4()+S4()+S4()+S4(); }, formatDate:function(a){ var hh = parseInt(a/3600); if(hh<10) hh = '0' + hh; var mm = parseInt((a-hh*3600)/60); if(mm<10) mm = '0' + mm; var ss = parseInt((a-hh*3600)%60); if(ss<10) ss = '0' + ss; var length = hh + ':' + mm + ':' + ss; if(a>0){ if(length != 'NaN:NaN:NaN') return length; } return '00:00:00'; }, strsub:function(str,start,end,bol){ var s = 0; if(start != ''){ if(str.indexOf(start) == -1) return null; s = str.indexOf(start) + start.length; } var e = 0; if(end == ''){ e = str.length; }else{ if(bol) e = str.lastIndexOf(end,s); else e = str.indexOf(end,s); } var l = e - s; return str.substr(s,l); }, alert:function(msg){ layer.alert(msg,{offset:'25%',icon:0}); }, confirm:function(msg,fun,funs,data){ layer.confirm(msg,{offset:'25%',icon:0},function(){ layer.close(layer.index); if(styledao.isempty(fun)) fun(data); },function(){ if(styledao.isempty(funs)) funs(data); }); }, iframe:function(title,area,url,offset,maxmin){ if(!this.isempty(offset)) offset = '25%'; layer.open({ type:2, offset:offset, title:title, area:area, maxmin:maxmin, content:url }); }, layerclose:function(){ layer.closeAll(); }, uploadpayler:function(e,vid){ if(!this.isempty(vid)){ vid = $(e).attr('vid'); if(vid == 0){ layer.msg('上传完成并转码成功才能播放哦,请耐心等待一下吧'); return; } } var url = parent.styledao.objs.betaurl+'?url='+parent.styledao.objs.betapar+vid; layer.open({title:'视频播放(播放器无法全屏请点击窗口右边的全屏按钮进行观看)',offset:'10%',type:1,maxmin:true,area:['800px','480px'],skin:'video-class',resize:false,content:'<iframe scrolling="no" border="0" marginwidth="0" marginheight="0" allowfullscreen="true" allowtransparency="true" frameborder="0" src="'+url+'" style="width: 100%; height: 100%;"></iframe>'}); }, getfilemd5:function(ofile,obj,fun){ var file = ofile; var tmp_md5; var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice, chunkSize = 8097152, chunks = Math.ceil(file.size / chunkSize), currentChunk = 0, spark = new SparkMD5.ArrayBuffer(), fileReader = new FileReader();  fileReader.onload = function(e) { spark.append(e.target.result); currentChunk++; var md5_progress = Math.floor((currentChunk / chunks) * 100); if(obj != null) obj.find('.u-l-left').text('上传前预处理中,已完成'+md5_progress+'%...'); if (currentChunk < chunks) { loadNext(); } else { tmp_md5 = spark.end(); if(obj != null) obj.attr('md5',tmp_md5); if(styledao.isempty(fun)) fun(tmp_md5); } }; fileReader.onerror = function() { if(obj != null) obj.find('.u-l-left').text('处理失败,请重新选择文件上传!'); }; function loadNext() { var start = currentChunk * chunkSize, end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize; fileReader.readAsArrayBuffer(blobSlice.call(file, start, end)); } loadNext(); }, webdata:{ set:function(key,val){ window.sessionStorage.setItem(key,val); }, get:function(key){ return window.sessionStorage.getItem(key); }, del:function(key){ window.sessionStorage.removeItem(key); }, clear:function(key){ window.sessionStorage.clear(); } }, httppost:function(data,fun,bol,type){ if(bol) styledao.loading(true); if(!styledao.isempty(type)) type = 'json'; $.post(apiurl+'/server/action',data,function(d){ if(bol) styledao.loading(); if(type != 'json' && styledao.isempty(fun)){ fun(d); return; } if(d.code == 200){ if(!styledao.isempty(fun)) return; fun(d.data); }else if(d.code == 400 || d.code == 401 || d.code == 404 || d.code == 405){ styledao.alert(d.data!=''?d.data:d.msg); }else{ styledao.alert('服务器请求失败,请稍后重试'); } },type); } };  $(function(){ styledao.init(); });